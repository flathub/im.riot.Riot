app-id: im.riot.Riot
base: org.electronjs.Electron2.BaseApp
base-version: "20.08"
runtime: org.freedesktop.Platform
runtime-version: "20.08"
sdk: org.freedesktop.Sdk
sdk-extensions:
  - org.freedesktop.Sdk.Extension.node14
command: run.sh
separate-locales: false
finish-args:
  # Required due to being a GUI application
  - --socket=x11
  # Required to make sure x11 performance is achieved on all platforms
  # At least that's what the legends tell. it might be worth experimenting
  # with dropping this permission.
  - --share=ipc
  # Required to provide Call functionality
  - --socket=pulseaudio
  - --device=all
  # As a chat application, networking is required
  - --share=network
  # Allows to send and receive files in the Downloads directory
  # Required until Electron supports portals for load and safe dialogs
  - --filesystem=xdg-download
  # Required for notifications in various desktop environments
  - --talk-name=org.freedesktop.Notifications
  - --talk-name=org.kde.StatusNotifierWatcher
  # Required due to KDE's special way of handling notifications
  - --own-name=org.kde.StatusNotifierItem-2-1
  # Required for advanced input methods e.g. writing CJK languages
  - --talk-name=org.freedesktop.portal.Fcitx
  # Required to store access tokens (persistent logins)
  - --filesystem=xdg-run/keyring
  # Required for experimental wayland support
  - --filesystem=xdg-run/pipewire-0
cleanup:
  - /include
  - /lib/pkgconfig
  - /lib/*.la
  - /lib/*.a
  - /share/pkgconfig
  - /share/aclocal
  - /share/gtk-doc
  - /share/doc
  - /share/info
  - /share/man
  - /man
modules:
  - shared-modules/libsecret/libsecret.json

  - name: tcl
    buildsystem: autotools
    subdir: unix
    post-install:
      - chmod 755 /app/lib/libtcl*.so
    cleanup:
      - /bin
      - /lib/pkgconfig
      - /man
    sources:
      - type: archive
        url: https://prdownloads.sourceforge.net/tcl/tcl8.6.11-src.tar.gz
        sha256: 8c0486668586672c5693d7d95817cb05a18c5ecca2f40e2836b9578064088258
        x-checker-data:
          type: anitya
          project-id: 4941
          stable-only: true
          url-template: https://prdownloads.sourceforge.net/tcl/tcl$version-src.tar.gz

  - name: sqlcipher
    rm-configure: true
    config-opts:
      - --enable-tempstore=yes
      - --disable-tcl
    build-options:
      cflags: -DSQLITE_HAS_CODEC
      ldflags: -lcrypto
    sources:
      - type: archive
        url: https://github.com/sqlcipher/sqlcipher/archive/v4.3.0.tar.gz
        sha256: fccb37e440ada898902b294d02cde7af9e8706b185d77ed9f6f4d5b18b4c305f
        x-checker-data:
          type: anitya
          project-id: 11213
          stable-only: true
          url-template: https://github.com/sqlcipher/sqlcipher/archive/v$version.tar.gz
      - type: shell
        commands:
          - cp -p /usr/share/automake-*/config.{sub,guess} .
      - type: script
        dest-filename: autogen.sh
        commands:
          - AUTOMAKE="automake --foreign" autoreconf -vfi

  - name: pipewire
    buildsystem: meson
    config-opts:
      - -Dgstreamer=disabled
      - -Dman=false
      - -Dsystemd=false
    cleanup:
      - /include
      - /bin
      - /etc
      - /lib/pkgconfig
    sources:
      - type: git
        url: https://github.com/PipeWire/pipewire.git
        tag: 0.2.7
        commit: 14c11c0fe4d366bad4cfecdee97b6652ff9ed63d
        x-checker-data:
          type: anitya
          project-id: 57357
          stable-only: true
          tag-template: $version

  - name: yarn
    buildsystem: simple
    build-commands:
      - cp -a * /app
    cleanup:
      - "*"
    sources:
      - type: archive
        url: https://github.com/yarnpkg/yarn/releases/download/v1.22.11/yarn-v1.22.11.tar.gz
        sha256: 2c320de14a6014f62d29c34fec78fdbb0bc71c9ccba48ed0668de452c1f5fe6c
        x-checker-data:
          type: anitya
          project-id: 13363
          url-template: https://github.com/yarnpkg/yarn/releases/download/v$version/yarn-v$version.tar.gz

  - name: element-web
    buildsystem: simple
    build-options:
      append-path: /usr/lib/sdk/node14/bin:/app/yarn/bin
      env:
        XDG_CACHE_HOME: /run/build/element-web/flatpak-node/cache
        npm_config_offline: "true"
        NPM_CONFIG_LOGLEVEL: verbose
        CXX: ccache g++
        CC: ccache gcc
    subdir: main
    build-commands:
      - yarn
      - yarn run build
      - mkdir -p /app/main/resources
      - cp -r webapp /app/main/resources/
    sources:
      - type: git
        url: https://github.com/vector-im/element-web.git
        tag: v1.7.34
        commit: 245d13875faaecb7c3fec2df112bf3a7a6e8fec9
        dest: main
        x-checker-data:
          type: json
          url: https://api.github.com/repos/vector-im/element-web/releases/latest
          tag-query: .tag_name
          version-query: .tag_name | sub("^v"; "")
          timestamp-query: .published_at

      - type: file
        url: data:yarn-offline-mirror%20/run/build/element-web/flatpak-node/yarn-mirror%0A--install.offline%20true%0A--run.offline%20true%0A
        dest: main
        dest-filename: .yarnrc

      - generated-sources-web.json

  - name: element-desktop
    buildsystem: simple
    build-options:
      append-path: /usr/lib/sdk/node14/bin:/app/yarn/bin
      env:
        XDG_CACHE_HOME: /run/build/element-desktop/flatpak-node/cache
        npm_config_offline: "true"
        npm_config_loglevel: verbose
    subdir: main
    build-commands:
      # Patch the electronVersion to build with to match the minimum version in the dependency list.
      - jq 'del(.build.electronVersion)' <<<$(cat package.json) > package.json

      - yarn
      - yarn run i18n
      # - yarn run asar-webapp
      - yarn run build:ts
      - yarn run build:res
      - |
        . ../flatpak-node/electron-builder-arch-args.sh
        yarn run electron-builder --linux dir -c.linux.target=dir $ELECTRON_BUILDER_ARCH_ARGS

      - cp -r dist/linux*unpacked/* /app/main
      - install -Dm 755 -t /app/bin/ ../run.sh
      - for size in 16 24 48 64 96 128 256 512; do [[ -e "build/icons/${size}x${size}.png" ]] && install
        -Dm644 "build/icons/${size}x${size}.png" "/app/share/icons/hicolor/${size}x${size}/apps/${FLATPAK_ID}.png";
        done
      - install -Dm644 ../im.riot.Riot.desktop /app/share/applications/im.riot.Riot.desktop
      - install -Dm644 ../im.riot.Riot.metainfo.xml /app/share/metainfo/im.riot.Riot.metainfo.xml
    sources:
      - type: git
        url: https://github.com/SimonBrandner/element-desktop
        #tag: v1.7.34
        commit: 96203a882ce3fa32445213a5eb1755990a81657d
        dest: main
        x-checker-data:
          type: json
          url: https://api.github.com/repos/vector-im/element-desktop/releases/latest
          tag-query: .tag_name
          version-query: .tag_name | sub("^v"; "")
          timestamp-query: .published_at

      - type: file
        url: data:yarn-offline-mirror%20/run/build/element-desktop/flatpak-node/yarn-mirror%0A--install.offline%20true%0A--run.offline%20true%0A
        dest: main
        dest-filename: .yarnrc

      - generated-sources-desktop.json

      - type: script
        dest-filename: run.sh
        commands:
          - export TMPDIR="$XDG_RUNTIME_DIR/app/${FLATPAK_ID:-im.riot.Riot}"
          - if test -n "$WAYLAND_DISPLAY" && test -e "$XDG_RUNTIME_DIR/$WAYLAND_DISPLAY"; then set -- --enable-features=UseOzonePlatform --ozone-platform=wayland "$@"; fi
          - zypak-wrapper.sh /app/main/element-desktop "$@"

      - type: file
        path: im.riot.Riot.metainfo.xml

      - type: file
        path: im.riot.Riot.desktop
